###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

################################################################################
# TS/JS projects
################################################################################
# aspect_rules_ts
# https://github.com/aspect-build/rules_ts/releases/tag/v3.3.2
bazel_dep(name = "aspect_rules_ts", version = "3.3.2")
rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps(
    # ts_version_from = "//:package.json",
    ts_version_from = "//experimental/service_test_ts:package.json",
)
use_repo(rules_ts_ext, "npm_typescript")

# ---

# aspect_rules_js
# https://github.com/aspect-build/rules_js/releases/tag/v2.1.2
bazel_dep(name = "aspect_rules_js", version = "2.1.2")
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")
pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")
